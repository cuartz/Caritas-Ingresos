<%@page contentType="text/html" pageEncoding="UTF-8"%>
<%@page language="java" %>
<%@page import="org.apache.struts.Globals" %>
<%@page import="java.util.Locale" %>
<%@taglib uri="http://struts.apache.org/tags-bean" prefix="bean" %>
<%
    HttpSession sesion = request.getSession();
    String idusersession = "";
    try {
        if (sesion.getAttribute("idusersession") != null) {
            idusersession = sesion.getAttribute("idusersession").toString();
        }

    } catch (Exception ex) {
        ex.printStackTrace();
    }

%>
<html>
    <head>       
        <script type="text/javascript">
        /************************ VARIABLES GLOBALES ********************************/        
        var winConfirmCobro;
        var tbarConfirm;
        var idBitacoraTmp;        
        var fechaaa = new Date();
        var idUsuarioTmp    = '<%=idusersession%>';
        var idUsuarioSplit  = idUsuarioTmp.split(":");
        var idUsuario       = idUsuarioSplit[0];
        
        /************************ FUNCIONES ********************************/
        function cleanRegConfirmCobro(){
            Ext.getCmp('frmConfirmCobro').getForm().reset();
            Ext.getCmp('CHKBOX_NO').enable(); 
            Ext.getCmp('CHKBOX_YES').enable();
            Ext.getCmp('MOTIVO_NO_COBRADO').enable();                
        }
        
        function validaDatosIngresosEfectivo(){            
            if(Ext.getCmp('CHKBOX_NO').getValue() == 0){
                Ext.MessageBox.alert('Error','¡Selecciona una opción!');
                return false
            }
            
//            if(Ext.getCmp('ID_DIRECCION_CCC').getValue() == null){
//                Ext.MessageBox.alert('Error','¡Seleccione una dirección de Cobro!');
//                return false
//            }
//            
//            if(Ext.getCmp('ID_RECOLECTOR_CCC').getValue() == null){
//                Ext.MessageBox.alert('Error','¡Seleccione un recolector!');
//                return false
//            }
//            
//            if(Ext.getCmp('FECHA_REPROGRAMACION_CC').getValue() == null){
//                Ext.MessageBox.alert('Error','¡Ingrese la nueva fecha de visita!');
//                return false
//            }
            
            if(Ext.getCmp('CHKBOX_NO').getValue() == 1 && Ext.getCmp('COMENTARIOS').getValue() == ''){
                Ext.MessageBox.alert('Error','¡Ingresa el motivo de la Reprogramación!');
                return false
            }


            
        }
        
        function daysInMonth(humanMonth, year) {
            return new Date(year || new Date().getFullYear(), humanMonth, 0).getDate();
        }
        
        function mostrarFecha(days, fecha){
            
            var milisegundos=parseInt(35*24*60*60*1000);           
//            var fecha=new Date();
            var day=fecha.getDate();            
            // el mes es devuelto entre 0 y 11
            var month=fecha.getMonth()+1;           
            var year=fecha.getFullYear();           

            alert("Fecha actual: "+day+"/"+month+"/"+year);

            //Obtenemos los milisegundos desde media noche del 1/1/1970
            var tiempo=fecha.getTime();
            //Calculamos los milisegundos sobre la fecha que hay que sumar o restar...
            milisegundos=parseInt(days*24*60*60*1000);
            //Modificamos la fecha actual
            var total=fecha.setTime(tiempo+milisegundos);
            day=fecha.getDate();
            month=fecha.getMonth()+1;
            year=fecha.getFullYear();

            alert("Fecha modificada: "+day+"/"+month+"/"+year);
        }
        
        //Recibe fecha en formato DD/MM/YYYY  
        function dia_semana(fecha){   
            fecha=fecha.split('/');  
            if(fecha.length!=3){  
                    return null;  
            }  
            //Vector para calcular día de la semana de un año regular.  
            var regular =[0,3,3,6,1,4,6,2,5,0,3,5];   
            //Vector para calcular día de la semana de un año bisiesto.  
            var bisiesto=[0,3,4,0,2,5,0,3,6,1,4,6];   
            //Vector para hacer la traducción de resultado en día de la semana.  
            var semana=['Domingo', 'Lunes', 'Martes', 'Miércoles', 'Jueves', 'Viernes', 'Sábado'];
            var semana1=[1, 2, 3, 4, 5, 6, 7];
            //Día especificado en la fecha recibida por parametro.  
            var dia=fecha[0];  
            //Módulo acumulado del mes especificado en la fecha recibida por parametro.  
            var mes=fecha[1]-1;  
            //Año especificado por la fecha recibida por parametros.  
            var anno=fecha[2];  
            //Comparación para saber si el año recibido es bisiesto.  
            if((anno % 4 == 0) && !(anno % 100 == 0 && anno % 400 != 0))  
                mes=bisiesto[mes];  
            else  
                mes=regular[mes];  
            //Se retorna el resultado del calculo del día de la semana.  
            return semana1[Math.ceil(Math.ceil(Math.ceil((anno-1)%7)+Math.ceil((Math.floor((anno-1)/4)-Math.floor((3*(Math.floor((anno-1)/100)+1))/4))%7)+mes+dia%7)%7)];  
        } 
        
        function fecha(){
            var dia = 0;
            var mes = 0;
            var ano = 0;            
            var date = new Date();            
            var dia = date.getDate();
            var mes = date.getMonth() + 1;
            var ano = date.getFullYear();
            var milisegundos;            
            var tiempo;
            var diasMasMenos;            
            
            if(dia_semana(dia+"/"+mes+"/"+ano) > 2 && dia_semana(dia+"/"+mes+"/"+ano) <= 7){ //Si es entre semana                
                //alert("entre semana");
                diasMasMenos = -1;
                milisegundos=parseInt(35*24*60*60*1000);                
                tiempo=date.getTime();
                milisegundos=parseInt(diasMasMenos*24*60*60*1000);                
                var total=date.setTime(tiempo+milisegundos);
                dia=date.getDate();
                mes=date.getMonth()+1;
                ano=date.getFullYear();
            }else if(dia_semana(dia+"/"+mes+"/"+ano) == 2){ //Si es Lunes                
                //alert("lunes");                
                diasMasMenos = -2;
                milisegundos=parseInt(35*24*60*60*1000);                
                tiempo=date.getTime();
                milisegundos=parseInt(diasMasMenos*24*60*60*1000);               
                var total=date.setTime(tiempo+milisegundos);
                dia=date.getDate();
                mes=date.getMonth()+1;
                ano=date.getFullYear();
            }            
            fechaaa = date;
        }
        
        Ext.define('direccionesMdl',{
            id:'direccionesMdl',
            extend: 'Ext.data.Model',
            fields: ['id','nombre']
        });
        
        Ext.define('recolectores',{// create the Data TIPO DE DIRECCION
            id:'recolectores',
            extend: 'Ext.data.Model',
            fields: ['id','nombre','idZona','idTipoRecolector']
        });
        
        var storeRecolectores = Ext.create('Ext.data.JsonStore', {
            model: 'recolectores',
            proxy: {
                type: 'ajax',
                url: 'comboboxAC.do?method=getAllRecolectores',                      
                reader: {
                    type: 'json',
                    root: 'rows'
                }
            }
        });
                     
        /************************ INICIA PANTALLA ********************************/         
        Ext.define('tesoreria.confirmacionCobro', {
            extend: 'Ext.window.Window',           
            alias:'widget.confirmacionCobro',                
            title: 'Confirmacion Cobro',
            width: 450,                
            height: 280,
            border: false,
            buttonAlign: 'left',
            layout: 'fit',
            maximizable: true,
            closeAction : 'close',
            region:'center',
            initComponent: function() {
                /************************ INICIALIZAR ********************************/ 
                winConfirmCobro = this;
                idBitacoraTmp = this.name; 
                var option = this.nameDos
                fecha();
                
                var cbxDirecciones = Ext.create('Ext.data.JsonStore', {
                    model: 'direccionesMdl',
                    proxy: {
                        type: 'ajax',
                        url: 'comboboxAC.do?method=getDireccionesDonante',
                        extraParams:{ID_BITACORA:idBitacoraTmp},
                        reader: {
                            type: 'json',
                            root: 'rows'
                        }
                    }
                });                
                
                /************************ TOOLBAR ********************************/
                
                tbarConfirm = new Ext.Toolbar({
                    items:[                      
                        {
                            xtype: 'button',
                            text: 'Guardar',
                            iconCls:'icon-save',
                            handler: function(){
                                if(option == 1){ //Reenviar dia siguiente                                    
                                    var json = winConfirmCobro.getDatas1();                                
                                    if(validaDatosIngresosEfectivo() != false){                                                                             
                                        Ext.Msg.confirm('Confirmar Cobro', '¿Los datos son correctos?', function(btn, text){
                                            if (btn == 'yes'){
                                                Ext.getCmp('frmConfirmCobro').getForm().submit({
                                                    url: 'tesoreriaAC.do?method=confirmacionCobro&jsonData='+json+'&idBitacora='+idBitacoraTmp+'&idUsuario='+idUsuario+'&opttion='+1,
                                                    waitMsg: 'Guardando...',
                                                    success: function(form, action) {
                                                        Ext.getCmp('gridCobrosEfectivo').getStore().load();                                                    
                                                        winConfirmCobro.destroy();
                                                        Ext.MessageBox.alert('Guardado','Se grabo la información correctamente'); 
                                                    },
                                                    failure: function(form, action) {
                                                        Ext.MessageBox.alert('Error','¡Ocurrio un error al grabar la información!');
                                                    }
                                                });                             
                                            }
                                        })
                                    }
                                }else{ //reenviar despues
                                    var json = winConfirmCobro.getDatas2();                                
                                    if(validaDatosIngresosEfectivo() != false){                                        
                                        Ext.Msg.confirm('Confirmar Cobro', '¿Los datos son correctos?', function(btn, text){
                                            if (btn == 'yes'){
                                                Ext.getCmp('frmConfirmCobro').getForm().submit({
                                                    url: 'tesoreriaAC.do?method=confirmacionCobro&jsonData='+json+'&idBitacora='+idBitacoraTmp+'&idUsuario='+idUsuario+'&opttion='+0,
                                                    waitMsg: 'Guardando...',
                                                    success: function(form, action) {
                                                        Ext.getCmp('gridCobrosEfectivo').getStore().load();                                                    
                                                        winConfirmCobro.destroy();
                                                        Ext.MessageBox.alert('Guardado','Se grabo la información correctamente'); 
                                                    },
                                                    failure: function(form, action) {
                                                        Ext.MessageBox.alert('Error','¡Ocurrio un error al grabar la información!');
                                                    }
                                                });                             
                                            }
                                        })
                                    }
                                }
                            }
                        },                        
                        '-',
                        {
                            xtype: 'button',
                            text: 'Salir',
                            iconCls:'icon-salir',
                            handler: function(){
                                winConfirmCobro.destroy();
                            }  
                        }                        
                    ]
                }); //Termina Toolbar
                
                
                if(option == 1){ //Reenviar dia siguiente
                    Ext.apply(this, {
                        items: [
                            {
                                xtype: 'form',
                                id: 'frmConfirmCobro',
                                border: false,                            
                                tbar: tbarConfirm,
                                layout: {
                                    type: 'anchor'
                                },
                                items: [
                                    {
                                        xtype: 'panel',                                   
                                        region: 'center',
                                        border: false,
                                        items: [
                                            {
                                                xtype: 'checkboxgroup',
                                                width: 427,
                                                labelWidth: 130,
                                                fieldLabel: 'Cobrado',
                                                items: [
                                                    {
                                                        xtype: 'checkboxfield',
                                                        id: 'CHKBOX_NO',
                                                        boxLabel: 'No',
                                                        handler: function(){   
                                                            if(this.checked){                                
                                                                Ext.getCmp('COMENTARIOS').enable();                                                            
                                                            }else{                                                           
                                                                Ext.getCmp('COMENTARIOS').disable();                                                            
                                                            }
                                                        }
                                                    }                                                
                                                ]
                                            },
                                            {
                                                xtype: 'combo',
                                                fieldLabel: 'Recoger en',
                                                id: 'ID_DIRECCION_CCC',
                                                size: 30,
                                                labelWidth: 130,
                                                store:cbxDirecciones,
                                                displayField: 'nombre',
                                                valueField: 'id'                                        
                                            },
                                            Ext.create('Ext.form.ComboBox', {
                                                fieldLabel: 'Recolector',
                                                name:'ID_RECOLECTOR',
                                                id:'ID_RECOLECTOR_CCC',
                                                emptyText:'Seleccione el Recolector',                                                            
                                                editable:false,
                                                labelWidth: 130,
                                                width: 350,                                    
                                                size: 30,
                                                store: storeRecolectores,
                                                queryMode: 'local',
                                                displayField: 'nombre',
                                                valueField: 'id'
                                            })
                                        ] //Cierra items panel 1
                                    },
                                    {
                                        xtype: 'datefield', 
                                        id:'FECHA_REPROGRAMACION_CC',
                                        labelWidth: 130,
                                        fieldLabel: 'Nueva Fecha Visita',
                                        format: 'd/m/Y'                                    
                                    },
                                    {
                                        xtype: 'textareafield',
                                        id: 'COMENTARIOS',
                                        labelWidth: 130,
                                        height: 100,
                                        width: 430,
                                        fieldLabel: 'Motivo',
                                        disabled: true
                                    }
                                ] //Cierra items form                        
                            }
                        ] //Cierra items ext.apply
                    }); //Cierra Ext.apply
                }else{ //Reenviar despues
                    Ext.apply(this, {
                        items: [
                            {
                                xtype: 'form',
                                id: 'frmConfirmCobro',
                                border: false,                            
                                tbar: tbarConfirm,
                                layout: {
                                    type: 'anchor'
                                },
                                items: [
                                    {
                                        xtype: 'panel',                                   
                                        region: 'center',
                                        border: false,
                                        items: [
                                            {
                                                xtype: 'checkboxgroup',
                                                width: 427,
                                                labelWidth: 130,
                                                fieldLabel: 'Cobrado',
                                                items: [
                                                    {
                                                        xtype: 'checkboxfield',
                                                        id: 'CHKBOX_NO',
                                                        boxLabel: 'No',
                                                        handler: function(){   
                                                            if(this.checked){                                
                                                                Ext.getCmp('COMENTARIOS').enable();                                                            
                                                            }else{                                                           
                                                                Ext.getCmp('COMENTARIOS').disable();                                                            
                                                            }
                                                        }
                                                    }                                                
                                                ]
                                            }                                            
                                        ] //Cierra items panel 1
                                    },                                    
                                    {
                                        xtype: 'textareafield',
                                        id: 'COMENTARIOS',
                                        labelWidth: 130,
                                        height: 100,
                                        width: 430,
                                        fieldLabel: 'Motivo',
                                        disabled: true
                                    }
                                ] //Cierra items form                        
                            }
                        ] //Cierra items ext.apply
                    }); //Cierra Ext.apply
                }
                
                
                
                storeRecolectores.load();
                tesoreria.confirmacionCobro.superclass.initComponent.apply(this, arguments); 
            }, //Cierra initComponent
            getDatas1: function (){
                var camposName=['CHKBOX_NO',
                                'FECHA_REPROGRAMACION_CC',
                                'ID_DIRECCION_CCC',
                                'ID_RECOLECTOR_CCC',
                                'COMENTARIOS']

                var camposValue = {'CHKBOX_NO':0,
                                    'FECHA_REPROGRAMACION_CC':'',
                                    'ID_DIRECCION_CCC':0,
                                    'ID_RECOLECTOR_CCC':0,
                                    'COMENTARIOS':''};

                var pos=0;
                var value = '';             

                for(pos=0;pos<camposName.length;pos++){
                    if(pos == 0){
                        value = Ext.getCmp(camposName[pos]).getValue();
                        if(value == true)
                            camposValue[camposName[pos]] = 1;
                        if(value == false)
                            camposValue[camposName[pos]] = 0;
                    }else{
                        value = Ext.getCmp(camposName[pos]).getValue();
                        if(value == '')
                            camposValue[camposName[pos]] = null;
                        else
                            camposValue[camposName[pos]] = value;
                    }                                                                                                              
                }                                 
                return Ext.encode(camposValue);
            },
            getDatas2: function (){
                var camposName=['CHKBOX_NO',                                
                                'COMENTARIOS']

                var camposValue = {'CHKBOX_NO':0,                                    
                                    'COMENTARIOS':''};

                var pos=0;
                var value = '';             

                for(pos=0;pos<camposName.length;pos++){
                    if(pos == 0){
                        value = Ext.getCmp(camposName[pos]).getValue();
                        if(value == true)
                            camposValue[camposName[pos]] = 1;
                        if(value == false)
                            camposValue[camposName[pos]] = 0;
                    }else{
                        value = Ext.getCmp(camposName[pos]).getValue();
                        if(value == '')
                            camposValue[camposName[pos]] = null;
                        else
                            camposValue[camposName[pos]] = value;
                    }                                                                                                              
                }                                 
                return Ext.encode(camposValue);
            }
        }); //Cierra Ext.define
        </script>
    </head>
    <body>
    </body>
</html>
