/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package com.caritas.utils;

import javax.naming.NamingException;
import javax.sql.DataSource;
import java.sql.*;
import javax.naming.Context;
import javax.naming.InitialContext;

/**
 *
 * @author RCastilloc
 */
public class MConnection {

    private static Connection con = null;

    public Connection getConnection() {
        try {
         
            //Conexion directa por Pool de conexiones...
            DriverManager.registerDriver(new com.microsoft.sqlserver.jdbc.SQLServerDriver());
           con = getCaritas().getConnection();
           //PROBANDO...

        } catch (Exception e) {
            System.out.println("Error de seguimiento en getConnection() : " + e.getMessage());
            e.printStackTrace();
        }
        return con;
    }

    /* Mostrar las propiedades del controlador y los detalles de la base de datos */
    public void displayDbProperties(Connection conn) {
        java.sql.DatabaseMetaData dm = null;
        try {
            if (conn != null) {
                dm = conn.getMetaData();
                System.out.println("Driver Loaded");
                System.out.println("\tName: " + dm.getDriverName() + " Version:" + dm.getDriverVersion());
                System.out.println("\tDatabase : " + dm.getDatabaseProductName() + " Version:" + dm.getDatabaseProductVersion());
            } else {
                System.out.println("Error: No hay ninguna conexi√≥n activa");
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
        dm = null;
    }

    public void closeConnection() {
        try {
            if (con != null) {
                con.close();
            }
            con = null;
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

//    private DataSource getCaritas() throws NamingException {
//        Context c = new InitialContext();
//        return (DataSource) c.lookup("java:comp/env/Caritas");
//    }
    private DataSource getCaritas() throws NamingException {
        Context c = new InitialContext();
        return (DataSource) c.lookup("java:comp/env/Caritas");
    }
}